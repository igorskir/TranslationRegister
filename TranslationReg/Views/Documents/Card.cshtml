@model TranslationRegistryModel.Document
<div class="doc-card-container">
    <div class="doc-card">
        <div class="doc-card-header">
            <p style="margin:0;">@Model.Name</p>
        </div>
        <div class="doc-img-icons">
            <div class="icons-column">
                <a href="@Url.Action("Download", "Documents", new { @filepath = Model.OriginalFile.Path })">
                    <i class="material-icons">file_download</i>
                </a>
                <a href="@Url.Action("Download", "Documents", new { @filepath = Model.OriginalFile.Path })">
                    <i class="material-icons">done_all</i>
                </a>
            </div>
            @{
                var extension = Path.GetExtension(Model.OriginalFile.Path);
                switch (extension)
                {
                    case ".doc":
                    case ".docx":
                        <img src="~/Uploads/DocIcons/doc.png" />
                        break;
                    case ".ppt":
                    case ".pptx":
                        <img src="~/Uploads/DocIcons/ppt.png" />
                        break;
                    case ".pdf":
                        <img src="~/Uploads/DocIcons/pdf.png" />
                        break;
                    default:
                        <img src="~/Uploads/DocIcons/any.png" />
                        break;
                }
            }
            <div class="icons-column">
                <i class="material-icons loadModal" data-href="/Documents/Edit/@Model.Id">mode_edit</i>
                <i class="material-icons loadModal" data-href="/Documents/Delete/@Model.Id">delete</i>
            </div>
        </div>

        <div class="doc-next-stage loadModal" data-href="/DocStages/CreateModal/@Model.Id">
            <i class="material-icons">keyboard_arrow_down</i>
        </div>
    </div>
</div>