@model TranslationReg.Models.LanguagePairsModel

@using (Html.BeginForm(Html.BeginForm("Create", "LanguagePairs")))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.languagePair.Id)

    <div class="card card-blue medium-card">

        <div class="card-header">
            <p>Добавить языковую пару</p>
            <div>
                @*<i class="material-icons ajaxToggleCard card-btn" data-ajax-update="#languagePair@(Model.languagePair.Id)" data-href="/LanguagePairs/Card/@Model.languagePair.Id">undo</i>*@
            </div>
        </div>

        <div class="card-content">
            <div class="card-row">
                <div class="card-property"><p>Название:</p></div>
                <div class="card-value">
                    @Html.EditorFor(model => model.languagePair.Name, new { htmlAttributes = new { @class = "form-control", required = "required", autofocus = "autofocus" } })
                </div>
            </div>
            <div class="card-row">
                <div class="card-property"><p>Оригинал:</p></div>
                <div class="card-value">
                    @Html.DropDownListFor(model => model.languagePair.OriginalLanguageId, Model.originalLanguageSelectlist, null, htmlAttributes: new { @class = "form-control", required = "required" })
                </div>
            </div>
            <div class="card-row">
                <div class="card-property"><p>Перевод:</p></div>
                <div class="card-value">
                    @Html.DropDownListFor(model => model.languagePair.TranslationLanguageId, Model.translationLanguageSelectlist, null, htmlAttributes: new { @class = "form-control", required = "required" })
                </div>
            </div>
            <div class="card-row">
                <div class="card-property"></div>
                <div class="card-value">
                    <input type="submit" value="Сохранить" class="btn btn-default btn-form form-control" />
                </div>
            </div>
        </div>
    </div>
}