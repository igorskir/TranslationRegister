@model TranslationRegistryModel.Project
@using TranslationReg.Controllers
<!-- ЗАГОЛОВОК И КНОПКА РЕДАКТИРОВАНИЯ -->
<h2 class="iconed-text">
    Проект: @Model.Name
    <i data-href="/Projects/EditModal/@Model.Id" class="material-icons right-icon loadModal">edit</i>
</h2>

<!-- ФИЛЬТРЫ -->
<div class="buttonsContainer">
    <ul class="buttons">
        <li>
            <div class="ajaxToggleBtn iconed-title" data-ajax-update="#addArea" data-href="/Documents/CreateProjectDoc/@Model.Id">
                <i class="material-icons">add_circle</i>
                <span>Добавить документы</span>
            </div>
        </li>
        @{
            if (ProjectsController.IsFinalisible(Model))
            {
                <li>
                    <a href="/Projects/FinaliseProject/@Model.Id">
                        <div class="iconed-title">
                            <i class="material-icons">done_all</i>
                            <span>Финализировать</span>
                        </div>
                    </a>
                </li>
            }
            else
            {
                if (Model.ProjectStatuseId == SqlRepository.Seeding.Seeder.DoneStatuseId)
                {
                    <li>
                        <a href="/Projects/DefinaliseProject/@Model.Id">
                            <div class="iconed-title">
                                <i class="material-icons">settings_backup_restore</i>
                                <span>Вернуть в работу</span>
                            </div>
                        </a>
                    </li>
                }
                else
                {
                    <li>
                        <div class="disabled-filter-btn iconed-title">
                            <i class="material-icons">done_all</i>
                            <span> Финализировать</span>
                        </div>
                    </li>
                }
            }
        }
    </ul>
</div>

<!-- ОБЛАСТЬ ДОБАВЛЕНИЯ -->
<div id="addArea" class="dynamicBlock dynamic-block-create"></div>

<div class="worktype-container">
    <div class="worktype-header">
        <div class="tableMaterial">
            <div class="titles pointer toggle-stage-panel">
                <div class="worktype-name">
                    Документы проекта
                </div>
                <div class="dropdown-btn " toggleid="docs" iconid="toggleIconDoc">
                    <i class="material-icons" id="toggleIconDoc">expand_more</i>
                </div>
            </div>
        </div>
    </div>
    <div class="worktype-content" id="docs">
        <div class="docworks-container docs-panel">
            @{
                foreach (var doc in Model.Documents)
                {
                    @Html.Partial("../Documents/DocInProjectCard", doc)
                }
            }
        </div>
    </div>
</div>



<!-- ОСНОВНАЯ ОБЛАСТЬ -->
@{
    // все стадии
    var stages = Model.Documents.SelectMany(x => x.Stages);
    if (stages != null && stages.Count() != 0)
    {
        var typedStages = stages.GroupBy(x => x.WorkTypeId);
        // работы по типам
        foreach (var oneTypeStages in typedStages)
        {
            //--------------------------------------------- Отображение этапов -----------------------------------------
            var currentWorkType = oneTypeStages.First().WorkType;
            <div class="worktype-container">
                <div class="worktype-header">
                    <div class="tableMaterial">
                        <div class="titles pointer toggle-stage-panel">
                            <div class="worktype-name">
                                @currentWorkType.Name
                            </div>

                            @*<div >
                                    Deadline:
                                    <input class="deadline" type="date" value="" id="@currentWorkType.Id" onchange="DeadlineSet(this)" required="required"/>
                                </div>*@

                            <div class="dropdown-btn " toggleid="stageToggle@(currentWorkType.Id)" iconid="toggleIcon@(currentWorkType.Id)">
                                <i class="material-icons" id="toggleIcon@(currentWorkType.Id)">expand_more</i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="worktype-content" id="stageToggle@(currentWorkType.Id)">
                    @{
                        //----------------------------------------------------------------------------------------------------------
                        var docedStages = oneTypeStages.GroupBy(x => x.DocumentId);
                        // работы по документам
                        foreach (var oneDocStages in docedStages)
                        {
                            <div class="docworks-container">
                                @{

                                    //--------------------------------------------- ОТОБРАЖЕНИЕ ДОКОВ ------------------------------------------
                                    var currentStage = oneDocStages.First();
                                    var currentDoc = oneDocStages.First().Document;
                                    @Html.Partial("../DocStages/Card", currentStage)
                                    //----------------------------------------------------------------------------------------------------------

                                    //--------------------------------------------- ТАБЛИЦА РАБОТ ------------------------------------------
                                    // работы по доку в стадии
                                    var typedDocWorks = oneDocStages.SelectMany(x => x.User_Stage);
                                    var stageId = oneDocStages.First().Id.ToString();
                                    <div class="works-table">
                                        <div class="tableMaterial">
                                            <div class="work-titles pointer loadModal rounded-top" data-href="/User_Stage/CreateModal/@stageId">
                                                <div class="col-md-3 iconed-title">
                                                    <i class="material-icons">add_circle</i>
                                                    <span>
                                                        Исполнитель
                                                    </span>
                                                </div>
                                                <div class="col-md-5">Комментарий</div>
                                                <div class="col-md-2">Количество</div>
                                                <div class="col-md-2">Комманды</div>
                                            </div>
                                        </div>
                                        <div class="tasks-content">
                                            @foreach (var work in typedDocWorks)
                                            {
                                                <div class="properties">
                                                    <div class="col-md-3">
                                                        @if (work.User.AvatarPath == null)
                                                        {
                                                            string avatarPath = Path.Combine(Helper.uploadDir, Helper.avatarsDir, Helper.defaultAvatar);
                                                            <img src="@Url.Content("~/"+ avatarPath)" class="small-icon user-icon" />
                                                        }
                                                        else
                                                        {
                                                            <img src="@Url.Content("~/"+ work.User.AvatarPath)" class="small-icon user-icon" />
                                                        }

                                                        <span>
                                                            @work.User.Name
                                                        </span>
                                                    </div>
                                                    <div class="col-md-5">
                                                        <span>
                                                            @work.Comment
                                                        </span>
                                                    </div>
                                                    <div class="col-md-2">
                                                        <span>
                                                            @work.Amount
                                                        </span>
                                                    </div>
                                                    <div class="col-md-2">
                                                        <div class="icons-container">
                                                            @if (work.DocFileId != null)
                                                            {
                                                                <a href="@Url.Action("Download", "Documents", new { @filepath = work.DocFile.Path })">
                                                                    <i class="material-icons">file_download</i>
                                                                </a>
                                                            }
                                                            else
                                                            {
                                                                <a>
                                                                    <i class="material-icons disabled-icon">file_download</i>
                                                                </a>
                                                            }
                                                            <a class="loadModal" data-href="/User_Stage/AddResultFile/@work.Id">
                                                                <i class="material-icons">attach_file</i>
                                                            </a>
                                                            <a class="loadModal" data-href="/User_Stage/Edit/@work.Id">
                                                                <i class="material-icons">edit</i>
                                                            </a>
                                                            <a class="loadModal" data-href="/User_Stage/Delete/@work.Id">
                                                                <i class="material-icons">delete</i>
                                                            </a>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                                        //----------------------------------------------------------------------------------------------------------
                                    }
                    }
                </div>
            </div>
                                        }
                                    }
}

<style>
    .docs-panel {
        justify-content: space-around;
    }

    .deadline {
        padding: 2px;
        vertical-align: middle;
        height: 70%;
        width: 60%;
        color: #5e5e5e;
        background: white;
        opacity: 0.7;
        font-size: 14px;
    }

    ::-webkit-in {
        display: none;
    }

    .deadline:hover {
        opacity: 1;
    }

    .toggle-stage-panel:hover i {
        transition: 0.3s;
        color: #c42d5b;
    }

    .iconed-title {
        display: flex;
        flex-flow: row wrap;
    }

        .iconed-title span,
        .iconed-title i,
        .iconed-title a {
            align-self: center;
        }

         .iconed-title a {
            text-decoration:none;
        }

        .iconed-title i {
            padding-right: 5px;
        }

    .worktype-container {
        margin-bottom: 20px;
        width: 100%;
        clear: left;
    }

    .works-table .tasks-content {
        /*margin: 0 6px 6px 6px;*/
        margin-bottom: 4px;
        border-bottom-left-radius: 6px;
        border-bottom-right-radius: 6px;
        overflow: hidden;
        box-shadow: 1px 1px 3px 1px rgba(0, 0, 0, 0.2);
    }

        .works-table .tasks-content .properties {
            padding: 0 5px 0 5px;
            background-color: #ffffff;
            background-color: #ffffffed;
        }

            .works-table .tasks-content .properties:last-child {
                border-bottom-left-radius: 6px;
                border-bottom-right-radius: 6px;
                overflow: hidden;
            }

    .work-titles {
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #5580aa;
        color: white;
    }

        .work-titles > div {
            text-align: center;
        }

    .rounded-top {
        border-top-left-radius: 6px;
        border-top-right-radius: 6px;
    }

    .worktype-content {
        padding: 5px;
        margin: 0 8px;
        background: #ffffff;
        background: #ffffff94;
        box-shadow: 2px 1px 3px 1px rgba(0, 0, 0, 0.3);
        overflow: hidden;
        border-bottom-left-radius: 6px;
        border-bottom-right-radius: 6px;
    }

        .worktype-content .docworks-container {
            margin: 10px;
            display: flex;
            margin-bottom: 30px;
        }

        .worktype-content .works-table {
            width: 100%;
            overflow: hidden;
            padding: 0 20px 0 30px;
        }

            .worktype-content .works-table > .tableMaterial {
                box-shadow: none;
            }

    .worktype-name {
        text-align: left !important;
        padding-left: 20px;
    }

    .dropdown-btn {
        float: right;
        width: 60px;
    }

        .dropdown-btn > i {
            font-size: 36px;
            color: white;
            vertical-align: middle;
        }

        .dropdown-btn:hover > i {
            color: #c42d5b;
        }

    .user-icon {
        margin-left: 10px;
    }
</style>
@*<script>

        window.onload = function () {

            @if (stages != null && stages.Count() != 0)
            {
                var typedStages = stages.GroupBy(x => x.WorkTypeId);
                foreach (var oneTypeStages in typedStages)
                {
                    <text>
                        DeadlineGet(@oneTypeStages.First().WorkType.Id);
                    </text>
                }
            }

        };

        function DeadlineSet(obj) {

            $.ajax({
                url: '@Url.Action("DeadlineSet", "Projects")',
                type: "get",
                data: {
                    project: @Model.Id, workTypeid: obj.id, deadline: obj.value
                },
                dataType: 'json',
                success: function (data) {

                },
                error: function (jqXHR, exception) {
                    alert("Ошибка обновления дедлайна, попробуйте позже");
                    DeadlineGet(obj.id);
                }

            });
        }
        function DeadlineGet(WorkTypeid) {
            $.ajax({
                url: '@Url.Action("DeadlineGet", "Projects")',
                type: "get",
                data: { project: @Model.Id, workTypeid: WorkTypeid  },
                dataType: 'json',
                success: function (data) {

                    document.getElementById(WorkTypeid).value = data;
                },
                error: function (jqXHR, exception) {
                    alert("Ошибка загрузки дедлайна, обновите страницу");

                }


            });
        }
    </script>*@

@section scripts {
    <script>
        // показать только последнюю стадию
        $(document).ready(function () {
            $('.worktype-content').hide();
            var btn = $(".dropdown-btn").last();
            var iconId = '#' + $(btn).attr("iconid");
            var icon = $(iconId);
            icon.html("expand_less");
            var activeWorktypeId = '#' + btn.attr("toggleid");
            $(activeWorktypeId).show();
        });

        // свернуть/развернуть стадию
        $('.toggle-stage-panel').click(function (e) {
            var btn = $(this).find('.dropdown-btn');
            var toogleId = '#' + btn.attr("toggleid");
            var toggleBlock = $(toogleId);
            var iconId = '#' + btn.attr("iconid");
            var icon = $(iconId);
            toggleBlock.toggle();

            if (toggleBlock.is(":visible")) {
                $(icon).html("expand_less");
            } else {
                $(icon).html("expand_more");
            }

        });
    </script>
}