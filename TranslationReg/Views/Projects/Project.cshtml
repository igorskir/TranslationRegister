@model TranslationRegistryModel.Project
@using TranslationReg.Controllers
<!-- ЗАГОЛОВОК И КНОПКА РЕДАКТИРОВАНИЯ -->
<h2 class="iconed-text">
    @Model.Name
    <a href="/Projects/Edit/@Model.Id"><i class="material-icons right-icon">edit</i></a>
</h2>

<!-- ФИЛЬТРЫ -->
<div class="filterContainer">
    <ul class="buttons">
        <li>
            <div class="btn-wrapper ajaxToggleBtn" data-ajax-update="#addArea" data-href="/Documents/CreateProjectDoc/@Model.Id">
                <i class="material-icons">add_circle</i>
                <span> Документ</span>
            </div>
        </li>
        <li>
            <div class="btn-wrapper ajaxToggleBtn" data-ajax-update="#addArea" data-href="/DocStages/ChooseForProject/@Model.Id">
                <i class="material-icons">add_circle</i>
                <span> Стадия</span>
            </div>
        </li>
        <li>
            <div class="btn-wrapper" data-ajax="true" data-ajax-update="#projectList" data-href="/Projects/Finalise/@Model.Id">
                <i class="material-icons">done_all</i>
                <span> Финализировать</span>
            </div>
        </li>
    </ul>
</div>

<!-- ОБЛАСТЬ ДОБАВЛЕНИЯ -->
<div id="addArea" class="dynamicBlock dynamic-block-create"></div>

<!-- ОСНОВНАЯ ОБЛАСТЬ -->
@{
    // все стадии
    var stages = Model.Documents.SelectMany(x => x.Stages);
    if (stages != null && stages.Count() != 0)
    {
        var typedStages = stages.GroupBy(x => x.WorkTypeId);
        // работы по типам
        foreach (var oneTypeStages in typedStages)
        {
            //--------------------------------------------- Отображение этапов -----------------------------------------
            var currentWorkType = oneTypeStages.First().WorkType;
            <div class="worktype-container">
                <div class="worktype-header">
                    <div class="tableMaterial">
                        <div class="titles">
                            <div class="worktype-name">
                                @currentWorkType.Name
                            </div>
                            <div class="dropdown-btn" toggleid="stageToggle@(currentWorkType.Id)" iconid="toggleIcon@(currentWorkType.Id)">
                                <i class="material-icons" id="toggleIcon@(currentWorkType.Id)">expand_more</i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="worktype-content" id="stageToggle@(currentWorkType.Id)">
                    @{
                        //----------------------------------------------------------------------------------------------------------


                        var docedStages = oneTypeStages.GroupBy(x => x.DocumentId);
                        // работы по документам
                        foreach (var oneDocStages in docedStages)
                        {
                            <div class="docworks-container">
                                @{

                                    //--------------------------------------------- ОТОБРАЖЕНИЕ ДОКОВ ------------------------------------------
                                    var currentDoc = oneDocStages.First().Document;
                                    <div class="doc-container">
                                        <img src="~/Uploads/DocIcons/Word.png" width="100" height="100" style="float:left" />
                                        <div class="icons-row">
                                            <a class="icon-list"><i class="material-icons">file_download</i></a>
                                            <a class="icon-list"><i class="material-icons">edit</i></a>
                                            <a class="icon-list"><i class="material-icons">delete</i></a>
                                        </div>
                                        <hr style="margin:5px" />
                                        <p style="margin:0">@currentDoc.Name</p>
                                    </div>
                                    //----------------------------------------------------------------------------------------------------------

                                    //--------------------------------------------- ТАБЛИЦА РАБОТ ------------------------------------------
                                    // работы по доку в стадии
                                    var typedDocWorks = oneDocStages.SelectMany(x => x.User_Stage);
                                    var stageId = oneDocStages.First().Id.ToString();
                                    <div class="works-table">
                                        <div class="tableMaterial">
                                            <div class="work-titles">
                                                <div class="col-md-2" style="display:flex;">
                                                    <div data-ajax-update="#addWork@(stageId)" data-href="/User_Stage/Create/@stageId" class="ajaxToggleBtn">
                                                        <i class="material-icons">add_circle</i>
                                                    </div>
                                                    <span style="text-align: center; align-self: center; margin: auto;">
                                                        Исполнитель
                                                    </span>
                                                </div>
                                                <div class="col-md-5">Комментарий</div>
                                                <div class="col-md-2">Количество</div>
                                                <div class="col-md-3">Комманды</div>
                                            </div>
                                        </div>
                                        <div class="inner-padding">
                                            <div id="addWork@(stageId)" class="dynamicBlock dynamic-block-create">123</div>
                                            @foreach (var work in typedDocWorks)
                                            {
                                                <div class="properties">
                                                    <div class="col-md-2">
                                                        @if (work.User.AvatarPath == null)
                                                        {
                                                            string avatarPath = Path.Combine(Helper.uploadDir, Helper.avatarsDir, Helper.defaultAvatar);
                                                            <img src="@Url.Content("~/"+ avatarPath)" class="small-icon" />
                                                        }
                                                        else
                                                        {
                                                            <img src="@Url.Content("~/"+ work.User.AvatarPath)" class="small-icon" />
                                                        }

                                                        <span>
                                                            @work.User.Name
                                                        </span>
                                                    </div>
                                                    <div class="col-md-5">
                                                        <span>
                                                            @work.Comment
                                                        </span>
                                                    </div>
                                                    <div class="col-md-2">
                                                        <span>
                                                            @work.Amount
                                                        </span>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <div class="buttons-container">
                                                            @if (work.DocFileId != null)
                                                            {
                                                                <a class="icon-list"><i class="material-icons">file_download</i></a>
                                                            }
                                                            <a class="icon-list"><i class="material-icons">file_upload</i></a>
                                                            <a class="icon-list"><i class="material-icons">edit</i></a>
                                                            <a class="icon-list"><i class="material-icons">delete</i></a>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                                <div style="clear:left"></div>
                            </div>
                            //----------------------------------------------------------------------------------------------------------
                        }
                    }
                </div>
            </div>
            <div style="clear:both"></div>
        }
    }


}

<style>
    .worktype-container {
        margin-bottom: 20px;
        width: 100%;
        height: 100%;
        clear: left;
    }

    .works-table .inner-padding {
        margin: 0 6px 6px 6px;
        border-bottom-left-radius: 6px;
        border-bottom-right-radius: 6px;
        overflow: hidden;
        box-shadow: 1px 2px 3px 1px rgba(0, 0, 0, 0.2);
    }

        .works-table .inner-padding .properties {
            padding: 0 5px 0 5px;
            background-color: #ffffffed;
        }

            .works-table .inner-padding .properties:last-child {
                border-bottom-left-radius: 6px;
                border-bottom-right-radius: 6px;
                overflow: hidden;
            }

    .work-titles {
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #45295fed;
        color: white;
    }

        .work-titles > div {
            text-align: center;
        }


    .worktype-content {
        padding: 5px;
        margin: 0 8px;
        background: #ffffff57;
        box-shadow: 4px 3px 8px 1px rgba(0, 0, 0, 0.3);
        overflow: hidden;
        border-bottom-left-radius: 6px;
        border-bottom-right-radius: 6px;
    }

        .worktype-content .docworks-container {
            margin: 10px;
        }

        .worktype-content .doc-container {
            height: 158px;
            width: 200px;
            background-color: #ffffffed;
            float: left;
            padding: 0px 10px;
            margin-top: 5px;
            text-align: center;
            vertical-align: top;
            border-radius: 6px;
            overflow: hidden;
            box-shadow: 1px 2px 3px 1px rgba(0, 0, 0, 0.2);
        }

            .worktype-content .doc-container p {
                font-size: 16px;
            }

        .worktype-content .works-table {
            width: auto;
            overflow: hidden;
            padding: 5px 10px 0 30px;
        }

            .worktype-content .works-table > .tableMaterial {
                box-shadow: 2px 1px 4px 1px rgba(0, 0, 0, 0.3)
            }

    .worktype-name {
        text-align: left !important;
        padding-left: 20px;
    }

    .dropdown-btn {
        float: right;
        width: 100px;
        border-left: 1px solid #2a3a65;
    }

        .dropdown-btn > i {
            font-size: 42px;
            color: white;
            vertical-align: middle;
        }

        .dropdown-btn:hover > i {
            color: #c42d5b;
        }

    .btn-wrapper {
        vertical-align: middle;
        display: flex;
        text-align: center;
    }

        .btn-wrapper > span {
            padding-left: 10px;
            align-self: center;
            vertical-align: middle;
        }

    .buttons {
        list-style: none;
        padding: 0;
        margin-bottom: 15px;
    }

        .buttons li {
            display: inline-block;
        }

            .buttons li div {
                display: flex;
                padding: 8px 10px;
                text-decoration: none;
                transition: 0.3s;
                background: #3d5279 !important;
                color: white !important;
                opacity: 0.9;
                box-shadow: 0px 3px 6px rgba(0,0,0,0.3);
                margin: 5px;
            }

                .buttons li div:hover {
                    color: #d41955 !important;
                    background-color: white;
                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);
                }
</style>

@section scripts {
    <script>
        // показать только последнюю стадию
        $(document).ready(function () {
            $('.worktype-content').hide();
            var btn = $(".dropdown-btn").last();
            var iconId = '#' + $(btn).attr("iconid");
            var icon = $(iconId);
            icon.html("expand_less");
            var activeWorktypeId = '#' + btn.attr("toggleid");
            $(activeWorktypeId).show();
        });

        // свернуть/развернуть стадию
        $('.dropdown-btn').click(function (e) {
            var btn = $(this);
            var toogleId = '#' + btn.attr("toggleid");
            var toggleBlock = $(toogleId);
            var iconId = '#' + btn.attr("iconid");
            var icon = $(iconId);
            toggleBlock.toggle();

            if (toggleBlock.is(":visible")) {
                $(icon).html("expand_less");
            } else {
                $(icon).html("expand_more");
            }

        });
    </script>
}