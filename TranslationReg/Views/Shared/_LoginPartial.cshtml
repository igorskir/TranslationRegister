@using Microsoft.AspNet.Identity
@using FormsAuthenticationExtensions;
@using System.Web.Security;
@using TranslationReg.Controllers

@{
    // получение данных об аватарке
    var ticketData = ((FormsIdentity)User.Identity).Ticket.GetStructuredUserData();
    string avatarPath = null;
    if (ticketData != null)
    {
        avatarPath = ticketData["avatarPath"];
    }
    // не получили - дефолтная аватарка
    if (string.IsNullOrEmpty(avatarPath))
    {
        avatarPath = Path.Combine(Helper.uploadDir, Helper.avatarsDir, Helper.defaultAvatar);
    }
}

@if (avatarPath != null)
{
    <div class="avatar-container">
        <img src="@Url.Content("~/"+ avatarPath)"/>
    </div>
}

@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()
        <div>
            @Html.ActionLink("Здравствуйте, " + User.Identity.GetUserName() + "!", "Login", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })
        </div>
        <div>
            <a href="javascript:document.getElementById('logoutForm').submit()">Выйти</a>
        </div>
    }
}
else
{
    <div class="login-commands">@Html.ActionLink("Регистрация", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</div>
    <div class="login-commands">@Html.ActionLink("Выполнить вход", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</div>
}

<style>
    .avatar-container {
        height: 60px;
        padding: 10px;
        width: 100%;
    }
        .avatar-container > img {
            align-self: center;
            display: block;
            margin: auto;
        }
</style>