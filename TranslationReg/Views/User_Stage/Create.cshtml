@model TranslationReg.Models.User_StageModel
<div class="dynamic-block-create">
    @using (Html.BeginForm("Create", "User_Stage", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <input hidden="hidden" name="StageId" value="@Model.work.StageId" />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.work.UserId, "Исполнитель")
            @Html.DropDownList("UserId", Model.usersSelectList, new { htmlAttributes = new { @class = "form-control", required = "required" } })
            @Html.ValidationMessageFor(model => model.work.UserId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.work.Amount, "Количество")
            <input class="form-control" type="number" required="required" min="1" max="100000" name="Amount" />
            @Html.ValidationMessageFor(model => model.work.Amount, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.work.Comment, "Комментарий")
            <input class="form-control" type="text" name="Comment" />
            @Html.ValidationMessageFor(model => model.work.Comment, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Прикрепить файл")
            <input type="file" name="workFile" />
            @Html.ValidationMessageFor(model => model.work.DocFileId, "", new { @class = "text-danger" })
        </div>

        <input type="submit" value="Сохранить" class="btn btn-default btn-form" />
    }
</div>
