@model TranslationReg.Models.User_StageModel

<div class="formContainer">
    @using (Html.BeginForm("Edit", "User_Stage", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Hidden("Id", Model.work.Id)
        @Html.Hidden("Date", Model.work.Date)
        @Html.Hidden("StageId", Model.work.StageId)
        @Html.Hidden("DocFileId", Model.work.DocFileId)

        <div class="form-group">
            @Html.LabelFor(model => model.work.UserId, "Пользователь", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserId", Model.usersSelectList, new { htmlAttributes = new { @class = "form-control", required = "required"} })
                @Html.ValidationMessageFor(model => model.work.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.work.Amount, "Количество", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control" type="number" required="required" min="1" max="100000" name="Amount" value="@Model.work.Amount" />
                @Html.ValidationMessageFor(model => model.work.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.work.Comment, "Комментарий", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control" type="text" name="Comment" value="@Model.work.Comment"/>
                @Html.ValidationMessageFor(model => model.work.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Прикрепить файл", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="workFile" />
                @Html.ValidationMessageFor(model => model.work.DocFileId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
    }
</div>
